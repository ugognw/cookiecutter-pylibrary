[testenv:bootstrap]
deps =
    jinja2
    tox
skip_install = true
commands =
    python ci/bootstrap.py --no-env
passenv =
    *

; a generative tox configuration, see: https://tox.wiki/en/latest/user_guide.html#generative-environments
[tox]
envlist =
    clean,
    check,
{%- if cookiecutter.sphinx_docs == "yes" %}
    docs,
{%- endif %}
    {py37,py38,py39,py310,py311,pypy37,pypy38,pypy39}
{%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}-{cover,nocov}{% endif %},
    report
ignore_basepython_conflict = true

[testenv]
basepython =
    pypy37: {env:TOXPYTHON:pypy3.7}
    pypy38: {env:TOXPYTHON:pypy3.8}
    pypy39: {env:TOXPYTHON:pypy3.9}
    py37: {env:TOXPYTHON:python3.7}
    py38: {env:TOXPYTHON:python3.8}
    py39: {env:TOXPYTHON:python3.9}
    py310: {env:TOXPYTHON:python3.10}
    py311: {env:TOXPYTHON:python3.11}
    {bootstrap,clean,check,report
        {%- if cookiecutter.sphinx_docs == "yes" -%}
            ,docs
        {%- endif -%}
        {%- if cookiecutter.codecov == 'yes' -%}
            ,codecov
        {%- endif -%}
        {%- if cookiecutter.coveralls == 'yes' -%}
            ,coveralls
        {%- endif -%}
    }: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
{%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}
usedevelop =
    cover: true
    nocov: false
{%- else %}
usedevelop = false
{%- endif %}
deps =
    pytest
    {% if cookiecutter.test_matrix_separate_coverage == 'yes' %}cover: {% endif %}pytest-cov
commands =
    {%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}
    nocov: {posargs:pytest -vv --ignore=src}
    cover: {posargs:pytest --cov --cov-report=term-missing --cov-report=xml -vv}
    {%- else %}
    {posargs:pytest --cov --cov-report=term-missing --cov-report=xml -vv {% if cookiecutter.allow_tests_inside_package == "no" %}tests{% endif %}}
    {%- endif %}

[testenv:check]
deps =
    docutils
{%- if cookiecutter.setup_py_uses_setuptools_scm == 'no' %}
    check-manifest
{%- endif %}
    pre-commit
    readme-renderer
    pygments
    isort
{%- if cookiecutter.setup_py_uses_setuptools_scm == 'yes' %}
    setuptools-scm
{%- endif %}
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
{%- if cookiecutter.setup_py_uses_setuptools_scm == 'no' %}
    check-manifest .
{%- endif %}
    pre-commit run --all-files --show-diff-on-failure

{%- if cookiecutter.sphinx_docs == "yes" %}

[testenv:docs]
usedevelop = true
{%- if cookiecutter.setup_py_uses_setuptools_scm == 'yes' %}
install_command =
    python -m pip install --no-use-pep517 {opts} {packages}
{%- endif %}
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
{%- if cookiecutter.sphinx_doctest == "yes" %}
    sphinx-build {posargs:-E} -b doctest docs dist/docs
{%- endif %}
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs
{%- endif %}

[testenv:report]
deps =
    coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps =
    coverage
