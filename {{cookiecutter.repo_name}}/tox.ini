[testenv:bootstrap]
deps =
    jinja2
    tox
skip_install = true
commands =
    python ci/bootstrap.py --no-env
passenv =
    *

; a generative tox configuration, see: https://tox.wiki/en/latest/user_guide.html#generative-environments
[tox]
envlist =
    clean,
    check,
{%- if cookiecutter.sphinx_docs == "yes" %}
    docs,
{%- endif %}
    {py310,py311},
    report
ignore_basepython_conflict = true

[testenv]
description = test installed package compatibility with {basepython}
basepython =
    py310: {env:TOXPYTHON:python3.10}
    py311: {env:TOXPYTHON:python3.11}
    {bootstrap,clean,check,report
        {%- if cookiecutter.sphinx_docs == "yes" -%}
            ,docs
        {%- endif -%}
        {%- if cookiecutter.codecov == 'yes' -%}
            ,codecov
        {%- endif -%}
        {%- if cookiecutter.coveralls == 'yes' -%}
            ,coveralls
        {%- endif -%}
    }: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
usedevelop = false
deps =
    pytest
    pytest-cov
commands =
    {posargs:pytest --cov --cov-report=term-missing --cov-report=xml -vv tests}

[testenv:check]
description = install pre-commit, pylint, and pytest in a virtual environment and invoke them on the current folder
deps =
    pre-commit
    pylint
    pytest
commands =
    pre-commit run --all-files --show-diff-on-failure
{%- if cookiecutter.sphinx_docs == "yes" %}

[testenv:docs]
description = build documentation
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
{%- if cookiecutter.sphinx_doctest == "yes" %}
    sphinx-build {posargs:-E} -a --color -W -b doctest -d "{envtmpdir}/doctrees" "{toxinidir}{/}docs{/}source" "{envtmpdir}/html"
{%- endif %}
    sphinx-build {posargs:-E} -a --color -W -b html -d "{envtmpdir}/doctrees" "{toxinidir}{/}docs{/}source" "{toxworkdir}{/}docs_out"
    sphinx-build -b linkcheck "{toxinidir}{/}docs{/}source" "{toxinidir}{/}dist{/}docs"
    python -c 'print(r"documentation available under file://{toxworkdir}{/}docs_out{/}index.html")'
{%- endif %}

[testenv:report]
description = produce test coverage report
deps =
    coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
description = clean test coverage data
commands = coverage erase
skip_install = true
deps =
    coverage
