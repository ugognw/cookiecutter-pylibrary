{% raw -%}
name: build
on: [push, pull_request]
jobs:
  test:
    name: {{ '${{ matrix.name }}' }}
    runs-on: {{ '${{ matrix.os }}' }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'check'
            python: '3.11'
            toxpython: 'python3.11'
            tox_env: 'check'
            os: 'ubuntu-latest'
{%- endraw %}
{%- if cookiecutter.sphinx_docs == "yes" %}
          - name: 'docs'
            python: '3.11'
            toxpython: 'python3.11'
            tox_env: 'docs'
            os: 'ubuntu-latest'
{%- endif %}
{%- raw %}
{% for env in tox_environments %}
{% set python %}{{ env[2] }}.{{ env[3:] }}{% endset %}
{% set toxpython %}python{{ python }}{% endset %}
{%- endraw %}
{%- raw %}
{% for os, python_arch in [
    ['ubuntu', 'x64'],
{%- endraw %}
{%- if 'yes' in [cookiecutter.github_actions_windows, cookiecutter.gitlab_ci_cd_windows] %}
    ['windows', 'x64'],
{%- endif %}
{%- if 'yes' in [cookiecutter.github_actions_osx, cookiecutter.gitlab_ci_cd_osx] %}
    ['macos', 'x64'],
{%- endif %}
{%- raw %}
] %}
          - name: '{{ env }} ({{ os }})'
            python: '{{ python }}'
            toxpython: '{{ toxpython }}'
            python_arch: '{{ python_arch }}'
            tox_env: '{{ env }}'
            os: '{{ os }}-latest'
{% endfor %}
{% endfor %}
    steps:
{%- endraw %}
{%- raw %}
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v4
      with:
        python-version: {{ '${{ matrix.python }}' }}
        architecture: {{ '${{ matrix.python_arch }}' }}
{%- endraw %}
    - name: install dependencies
      run: |
        python -m pip install --progress-bar=off -r ci/requirements.txt
        virtualenv --version
        pip --version
        tox --version
        pip list --format=freeze
{%- raw %}
    - name: test
      env:
        TOXPYTHON: '{{ '${{ matrix.toxpython }}' }}'
      run: >
        tox -e {{ '${{ matrix.tox_env }}' }} -v
{%- endraw %}
{%- if cookiecutter.coveralls == 'yes' %}
    - uses: coverallsapp/github-action@v2
      if: {{ "{{ '${{ always() }}' }}" }}
      continue-on-error: true
      with:
        parallel: true
        flag-name: {{ "{{ '${{ matrix.tox_env }}' }}" }}
{%- endif %}
{%- if cookiecutter.codecov == 'yes' %}
    - uses: codecov/codecov-action@v3
      if: {{ "{{ '${{ always() }}' }}" }}
      with:
        verbose: true
        flags: {{ "{{ '${{ matrix.tox_env }}' }}" }}
{%- endif %}
{%- if cookiecutter.coveralls == 'yes' %}
  finish:
    needs: test
    if: {{ "{{ '${{ always() }}' }}" }}
    runs-on: ubuntu-latest
    steps:
    - uses: coverallsapp/github-action@v2
      with:
        parallel-finished: true
{%- endif %}
